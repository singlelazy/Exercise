1.面向对象变成(OOP)的特点
	- 抽象： 抓住核心问题
	- 封装： 只能通过对象来访问方法
	- 继承： 从已有对象上继承新的对象
	- 多态： 多对象的不同形态
2.面向对象的组成
	- 方法(行为、操作)——函数: 过程、动态的
	- 属性——变量: 状态、静态的
3.工厂方式:
	面向对象中的封装函数
	改成与系统对象类似写法
		- 首字母大写
		- New关键字提取
		- This指向为新创建的对象,函数的返回值直接就是this(隐式返回)
	构造函数
		- 用来创建对象的函数,叫做构造函数
	存在的问题
		- 对象的引用
		- 内存浪费
4.对象的引用
	基本类型赋值：赋值的时候只是值的复制
	对象类型赋值：赋值不仅是值的复制,而且也是引用的传递
	基本类型比较：值相同就可以
	对象类型比较：值和引用都相同
5.原型(prototype)
	去改写对象下面公用的方法或者属性，让公用的方法或者属性在内存中存在一份(提高性能)
	写在构造函数的后面
	通过原型改写工厂方式
		- 原则：相同的属性和方法可以加载到原型上
		- 混合的编程模式
6.总结面向对象写法
	- 构造函数加属性,原型加方法
	function 构造函数(){
		this.属性
	}
	构造函数.prototype.方法=function(){}

	var 对象1=new 构造函数();
	对象1.方法